
# Resumo: Máquinas Virtuais

## Introdução

Com máquinas virtuais, o sistema operacional convidado e suas aplicações executam em uma ambiente que parece, para eles, ser o hardware nativo e que se comporta como o hardware nativo se comportaria, mas também oferece proteção, gerenciamento, e isolamento.

A ideia fundamental por trás de máquinas virtuais é abstrair o hardware de um único computador em vários ambientes de execução diferentes, criando assim a ilusão de que cada ambiente separado está executando em seu próprio computador privado.

A implementação de máquinas virtuais envolve vários componentes. Na base está o host, o harware que executa as máquinas virtuais. O Monitor de Máquinas Virtuais (VMM), também conhecido como Hypervisor, cria e executa máquinas virtuais provendo uma inteface que é idêntica à do host (isso é verdade, exceto no caso de para-virtualização). Cada processo convidado possui uma cópia virtual do host. Geralmente, o processo convidado é um sistema operacional. Assim, uma única máquina física pode executar múltiplos sistemas operacionais concorrentemente, cada um em sua própria máquina virtual.

A implementação de VMMs varia. Existem as seguintes opções:

  - baseados em hardware: também conhecidos como Hypervisors de tipo 0, fornecem suporte para criação e gerenciamento de máquinas virtuais através de firmware;
  - software similar a um sistema operacional: seu principal representante é o VMWare. Esse tipo é conhecido como Hypervisor de tipo 1;
  - sistemas operacionais de próposito geral com suporte a virtualização: seus principais representantes são o Windows Server e o RedHat com KVM. Também são hypervisors de tipo 1;
  - aplicações que executam em sistemas operacionais padrão mas provêm recursos de VMMs: seus principais representantes são o Fusion, Parallels Desktop e o Oracle Virtual Box. São hypervisors de tipo 2;
  - paravirtualização: técnica na qual o sistema operacional convidado é modificado para trabalhar em conjunto com o VMM para otimizar performance;
  - emuladores: permitem que aplicações escritas para outro hardware executem em um hardware muito diferente.


## Definição Formal de Virtualização

Três requisitos devem ser satisfeitos por um sistema de virtualização:

  1. Um VMM provê um ambiente para programas que é essencialmente idêntido ao da máquina original;
  2. Programas executando dentro do ambiente virtual exibem somente um decréscimo marginal de performance;
  3. O VMM tem controle total dos recursos do sistema.

Esses requisitos de fidelidade, performance e segurança ainda guiam os esforços de virtualização atualmente.

## Benefícios e Recursos

### Isolamento

O host é protegido das máquinas virtuais e as máquinas virtuais são protegidas do host. Infecção em um não infecta o outro.

**Desvantagem de isolamento:** dificulta o compartilhamento de recursos.


### Consolidação de Sistemas

Permite que dois sistemas separados sejam executados em máquinas virtuais em um único hardware.

### Gerenciamento

Virtualização facilita o gerenciamento de servidores, dado que vários estão localizados em uma mesma máquina física, os esforços necessários para gerenciamento e manutenção são reduzidos.

## Tipos de Hypervisor

### Tipo 0

Hypervisors de tipo 0 são um recurso de hardware. Os sistemas operacionais não precisam fazer nada de especial para usar esses recursos. O VMM é armazenado em firmware e é carregado durante o boot. Ele então carrega as imagens convidadas para executar em partições separadas.


### Tipo 1

Hypervisors de tipo 1 são comumente encontrados em data centers. Eles são **sistemas operacionais de propósito específico que executam nativamente no hardware**. Em vez de prover chamadas de sistema e outras interfaces para execução de programas, eles criam, executam e gerenciam sistemas operacionais convidados. Eles **também podem executar sobre Hypervisors de tipo 0**, em vez de executar sobre o hardware nativo. Além disso, eles executam em modo kernel, fazendo uso da proteção do harware.


### Tipo 2

Esse tipo de Hypervisor é simplemente um outro tipo de processo que é executado e gerenciado pelo host.

## Paravirtualização

A paravirtualização **provê** ao sistema convidado um **ambiente que é parecido** com o ambiente ideal para esse sistema. O **sistema convidado precisa ser modificado** para executar em um ambiente paravirtualizado.

Nesse tipo de virtualização o sistema convidado precisa chamar o VMM sempre que executar uma instrução que possa alterar o estado do sistema, uma instrução sensível. Isso acaba com a necessidade de o VMM testar instrução por instrução, o que representa um ganho significativo de desempenho.

Outro ponto positivo da para-virtualização é que os dispositivos de hardware são acessados por drivers da própria máquina virtual, não necessitando mais do uso de drivers genéricos que inibiam o uso da capacidade total do dispositivo.


## Virtualização do Ambiente de Programação


Lembrar de Java e da JVM.


## Emulação

Permite que aplicações escritas para outro hardware executem em um hardware muito diferente.

Desafio: performance.

## Migração de Máquinas Virtuais

Um sistema operaciona convidado é copiado para outro host que executa o mesmo VMM. A cópia ocorre de modo transparente ao usuário.

Limitação: o estado do disco não é transferido.
